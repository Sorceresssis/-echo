<script lang='ts'>
    const handleDeleteDialog = async () => {
        // 输入完整的名字才能删除
        if (deleteDialogInfo.value.confirmInputName != deleteDialogInfo.value.deleteItemName) return
        // 删除的library如果是正在被打开的，就传一个{id:0,name:""}
        if (_FocusLibraryIndex == -1) {
            groups.value[_FocusGroupIndex].librarys.forEach(element => {
                if (element.id == activeLibrary.value.id) {
                    openLibrary({ id: 0, name: "" })
                }
            });
            if (await window.electronAPI.deleteGroup(groups.value[_FocusGroupIndex].id)) {
                groups.value.splice(_FocusGroupIndex, 1)
                isExpandGroup.value.splice(_FocusGroupIndex, 1)
            }
        } else {
            if (groups.value[_FocusGroupIndex].librarys[_FocusLibraryIndex].id == activeLibrary.value.id) {
                openLibrary({ id: 0, name: "" })
            }
            if (await window.electronAPI.deleteLibrary(groups.value[_FocusGroupIndex].librarys[_FocusLibraryIndex].id)) {
                groups.value[_FocusGroupIndex].librarys.splice(_FocusLibraryIndex, 1)
            }
        }
        deleteDialogInfo.value.isVisibleDialog = false
    }

    /******************** 在数据库更新顺序 ********************/
    const updataGroupOrder = debounce(async () => {
        let groupsId: number[] = []
        groups.value.forEach(element => {
            groupsId.push(element.id)
        });
        await window.electronAPI.updataOrderGroup(groupsId);
    }, 200)

    const updataLibraryOrder = debounce(async (groupIndex: number) => {
        let librarysId: number[] = []
        groups.value[groupIndex].librarys.forEach(element => {
            librarysId.push(element.id)
        })
        await window.electronAPI.updataOrderLibrary(groups.value[groupIndex].id, librarysId)
    }, 200)

    /******************** 右键菜单移动library ********************/
    const moveLibrary = async (groupIndex: number) => {
        if (groupIndex == _FocusGroupIndex) {
            ElMessage.error('已在该组')
            return
        }
        // 删除拖动元素,添加到group第一个的位置
        let sourceLibrary: library = groups.value[_FocusGroupIndex].librarys.splice(_FocusLibraryIndex, 1)[0]
        groups.value[groupIndex].librarys.unshift(sourceLibrary)
        _FocusLibraryIndex = _ToLibraryIndex
        await window.electronAPI.moveLibrary(groups.value[groupIndex].id, sourceLibrary.id)
        updataLibraryOrder(groupIndex)
    }
</script>